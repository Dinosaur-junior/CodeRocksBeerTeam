from telebot import types
import random


def create_keyboard(btn_lines):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for line in btn_lines:
        btn_arr = []
        for name in line:
            btn_arr.append(types.KeyboardButton(text=name))
        keyboard.add(*btn_arr)
    return keyboard


def create_inline_keyboard(btn_lines):
    keyboard = types.InlineKeyboardMarkup()
    for line in btn_lines:
        btn_arr = []
        for name, data in line:
            btn_arr.append(types.InlineKeyboardButton(text=name, callback_data=data))
        keyboard.add(*btn_arr)
    return keyboard


def none():
    return types.ReplyKeyboardRemove()


def menu():
    return create_keyboard([
        ['–í–≤–µ—Å—Ç–∏ –∫–æ–¥'],
        ['–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º'],
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏']
    ])


def menu_reg():
    return create_keyboard([
        ['–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã', '–ú–æ–∏ –∫–æ–ª–ª–µ–≥–∏'],
        ['–ú–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏'],
        ['–ü—Ä–æ–π—Ç–∏ –æ–±—É—á–µ–Ω–∏–µ'],
        ['–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º'],
        ['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏'],
        ['–ö–∞—Ä—Ç–∞ –æ—Ñ–∏—Å–∞'],
        ['–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å']
    ])


def back():
    return create_keyboard([
        ['<< –ù–∞–∑–∞–¥']
    ])


def start_btn():
    return create_keyboard([
        ['–°–¢–ê–†–¢'],
        ['<< –ù–∞–∑–∞–¥']
    ])


#--------------------------------------------------------------------
# Training

def training_again():
    return create_keyboard([
        ['–ü—Ä–æ–π—Ç–∏ –µ—â–µ —Ä–∞–∑'],
        ['<< –ù–∞–∑–∞–¥']
    ])


def duties_training(id, answers):
    return create_inline_keyboard(
        [[(answ_inc, f'duties_training|{id}|False')] for answ_inc in answers['incorrect']] + [[(answers['correct'], f'duties_training|{id}|True')]]
    )


def duties_training_answ(id, answers, max_duties_cnt):
    if id + 1 == max_duties_cnt:
        return create_inline_keyboard(
            [[('‚ùå' + answ_inc, f'duties_training|{id}|')] for answ_inc in answers['incorrect']] + 
            [[('‚úÖ' + answers['correct'], f'duties_training|{id}|')]] +
            [[('üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ', f'duties_training|{id}|end')]]
        )
    else:
        return create_inline_keyboard(
            [[('‚ùå' + answ_inc, f'duties_training|{id}|')] for answ_inc in answers['incorrect']] + 
            [[('‚úÖ' + answers['correct'], f'duties_training|{id}|')]] +
            [[('–î–∞–ª–µ–µ >>', f'duties_training|{id}|next')]]
        )


#--------------------------------------------------------------------


def cmp_info_game_1():
    return create_inline_keyboard([
        [('1 –ª', 'cmp_info_game|1|False'), ('100 –ª', 'cmp_info_game|1|False'), ('40 —Ç–æ–Ω–Ω', 'cmp_info_game|1|True')],
        [('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É', 'cmp_info_game|end')]
    ])


def cmp_info_game_1_answer():
    return create_inline_keyboard([
        [('‚ùå 1 –ª', 'cmp_info_game|1|'), ('‚ùå 100 –ª', 'cmp_info_game|1|'), ('‚úÖ 40 —Ç–æ–Ω–Ω', 'cmp_info_game|1|')],
        [('–î–∞–ª–µ–µ >>', 'cmp_info_game|1|next')],
        [('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É', 'cmp_info_game|end')]
    ])


def cmp_info_game_2():
    return create_inline_keyboard([
        [('15%', 'cmp_info_game|2|False'), ('40%', 'cmp_info_game|2|False'), ('95%', 'cmp_info_game|2|True')],
        [('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É', 'cmp_info_game|end')]
    ])


def cmp_info_game_2_answer():
    return create_inline_keyboard([
        [('‚ùå 15%', 'cmp_info_game|2|'), ('‚ùå 40%', 'cmp_info_game|2|'), ('‚úÖ 95%', 'cmp_info_game|2|')],
        [('–î–∞–ª–µ–µ >>', 'cmp_info_game|2|next')],
        [('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É', 'cmp_info_game|end')]
    ])


def cmp_info_game_3():
    return create_inline_keyboard([
        [('–í–∏—à–Ω–µ–≤–æ–µ –ø–∏–≤–æ', 'cmp_info_game|3|True'), ('–°–≤–µ—Ç–ª–æ–µ –ø–∏–≤–æ', 'cmp_info_game|3|True'), ('–¢–µ–º–Ω–æ–µ –ø–∏–≤–æ', 'cmp_info_game|3|True')],
        [('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É', 'cmp_info_game|end')]
    ])


def cmp_info_game_3_answer():
    return create_inline_keyboard([
        [('‚úÖ –í–∏—à–Ω–µ–≤–æ–µ –ø–∏–≤–æ', 'cmp_info_game|3|'), ('‚úÖ –°–≤–µ—Ç–ª–æ–µ –ø–∏–≤–æ', 'cmp_info_game|3|'), ('‚úÖ –¢–µ–º–Ω–æ–µ –ø–∏–≤–æ', 'cmp_info_game|3|')],
        [('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É', 'cmp_info_game|end')]
    ])